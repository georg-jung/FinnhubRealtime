trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  SrcDir: '$(System.DefaultWorkingDirectory)'
  solution: '$(SrcDir)/FinnhubRealtime.sln'
  BuildConfiguration: 'Release'
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  VersionSuffix: $(Build.BuildNumber)
  NugetConfigPath: '$(SrcDir)/NuGet.config'
  RunTests: false
  UseNugetCache: false
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages

stages:
- stage: Build
  jobs:
  - job: Library
    displayName: 'Library'
    steps:
    - task: Cache@2
      inputs:
        key: 'nuget | "$(Agent.OS)" | **/packages.lock.json, !**/bin/**, !**/obj/**'
        restoreKeys: |
          nuget | "$(Agent.OS)"
          nuget
        path: $(NUGET_PACKAGES)
      displayName: Cache NuGet packages
      condition: and(succeeded(), eq(variables.UseNugetCache, true))

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '$(solution)'
        feedsToUse: 'config'
        nugetConfigPath: '$(NugetConfigPath)'
        verbosityRestore: 'Minimal'
        arguments: '--locked-mode'
      displayName: 'Restore'

    - task: DotNetCoreCLI@2
      inputs:
        command: build
        projects: '$(solution)'
        arguments: '-c $(BuildConfiguration) --no-restore'
      displayName: 'Build'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(solution)'
        arguments: '-c $(BuildConfiguration) --no-restore --no-build'
      displayName: 'Test'
      condition: and(succeeded(), eq(variables.RunTests, true))

    - task: DotNetCoreCLI@2
      inputs:
        command: pack
        packagesToPack: '$(SrcDir)/FinnhubRealtime/FinnhubRealtime.csproj'
        configuration: $(BuildConfiguration)
        packDirectory: $(Build.ArtifactStagingDirectory)/Packages
        arguments: '--no-restore --no-build'
      displayName: 'Pack FinnhubRealtime'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/Packages'
        artifact: 'Packages'

##################
##### DEPLOY #####
##################
- stage: DeployPushInternalFeed
  displayName: 'Deploy:NuGet Push Internal Feed'
  dependsOn: Build
  jobs:
  - deployment: FinnhubRealtime
    environment: 'internalfeed'
    strategy:
      runOnce:
        deploy:
          steps:
            # see https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts?view=azure-devops&tabs=yaml#artifacts-in-release-and-deployment-jobs
            # we want to download the specific artifact we need so skip auto download
            - download: none
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'Packages'
                targetPath: '$(System.DefaultWorkingDirectory)'
            - task: DotNetCoreCLI@2
              displayName: 'Push to Feed'
              inputs:
                command: 'push'
                searchPatternPush: '$(System.DefaultWorkingDirectory)/**/*.nupkg;$(System.DefaultWorkingDirectory)/**/*.snupkg'
                nuGetFeedType: 'internal'
                feedPublish: 'FinnhubRealtime/FinnhubRealtime'
